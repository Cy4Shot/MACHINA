buildscript {
    repositories {
   		maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
    classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "machina.refmap.json"
    config "machina.mixins.json"
}

version = '1.0'
group = 'com.cy4.machina'
archivesBaseName = 'machina'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: '2021.10.17-1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
      		property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			arg "-mixin.config=machina.mixins.json"

            mods {
                machina {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
      		property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=machina.mixins.json"

            mods {
                machina {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            
            args '--mod', 'machina', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                machina {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		url "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		url "https://modmaven.k-4u.nl"
	}
	maven {
		url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
	}
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.9'
    
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
    
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.16.5:3.0.45')
    
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "machina",
            "Specification-Vendor": "Cy4",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Cy4",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "machina.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
